
# Project Title
Il doit être possible de tirer une carte depuis un deck.

- Le jeu de 52 cartes doit être construit en utilisant l’API https://deckofcardsapi.com. ✅
- Une partie doit se dérouler avec le même jeu de 52 cartes. ✅
- Les cartes tirées doivent être tirées depuis le même jeu de 52 cartes à chaque fois. ✅
- Le jeu de 52 cartes ne doit contenir aucun joker. ✅
- Chaque carte tirée doit être affichée à l’écran. ✅
- Il ne doit pas être possible de tirer une carte après une victoire. ✅
- Il ne doit pas être possible de tirer une carte après que le jeu de carte soit vide. ✅
- Il doit être possible d’afficher le score en cours, mis à jour après chaque tirage. ✅
- Il doit être possible d’afficher le nombre de cartes restantes, mis à jour après chaque tirage. ✅
- Il doit être possible de tirer un nombre de cartes arbitraire à la fois. ✅
- Il doit être possible de décider de s’arrêter pour voir si la carte suivante nous fait gagner ou perdre. ✅
- Il doit être possible de pouvoir rejouer une partie après une victoire ou un échec. ✅
- Il doit être possible de recommencer une nouvelle partie pendant une partie en cours. ✅
- Il ne doit pas être possible de pouvoir recommencer avant d’avoir tiré au moins une carte. ✅
- Il doit y avoir des animations affichées lorsqu’une carte est tirée et posée sur le tas. ✅
- Il doit être possible d’avoir un message d’erreur lorsqu’une erreur survient lors d’un tirage de carte. ✅
- Il doit être possible de voir une icône affichée dans l’onglet du navigateur. ✅
- Il doit être possible de voir un titre correctement affiché dans l’onglet du navigateur. ✅
- Il doit être possible de voir l’état courant du réseau (connecté, déconnecté). ✅
- Il doit être possible de tirer une carte en appuyant sur la touche “D” du clavier. ✅
- Il doit être possible de pouvoir tirer de nouveau une carte lorsqu’une erreur réseau survient. ✅
- Il doit être possible d’annuler le tirage d’une carte en cours de requête. ✅
- Il doit être possible d’afficher une fenêtre modale de résultat après une victoire ou un échec. ✅
- Les cartes doivent être affichées les unes sur les autres de manière à imiter un paquet désordonné.
- Il doit y avoir une animation des cartes lorsque le joueur gagne une partie.
- Il doit y avoir une animation des cartes lorsque le joueur perd une partie.
- Il ne doit pas être possible de tirer une nouvelle carte si une carte est déjà en cours de tirage.
- Il ne doit pas être possible de s’arrêter de tirer une carte si aucune carte n’est en cours de tirage.
- Il doit y avoir un retour haptique (vibreur) lorsqu’une carte est tirée, lors d’une victoire ou d’un échec.
- Il doit être possible de tirer une nouvelle carte en secouant l’appareil.
- Il doit être possible de tirer une nouvelle carte lorsque la main est proche du capteur de proximité.
- Il doit être possible d’annuler le tirage d’une carte en appuyant sur la touche “C” du clavier.
- Il doit être possible de reprendre une partie à tout moment, même après avoir fermé l’onglet.
- Il doit être possible de jouer à la fois sur mobile, tablette ou ordinateur.
- Il doit y avoir une interface graphique pensée pour l’UX/UI et agréable à utiliser.

# Pré-requis

- Toutes les erreurs doivent être gérées.
- Le projet doit être organisé en dossiers (styles, images, scripts, ...). Le projet doit être servi sur un serveur Web.
- Le projet ne doit avoir aucune dépendance autre que Docker.
- Le projet utilise des modules ECMAScript.
- Le projet n’utilise aucune fonctionnalité dépréciée.
- Le projet a une documentation pour les testeurs.
- Le projet ne doit utiliser aucune librairie HTML, CSS ou JavaScript.
